@using System.ComponentModel.DataAnnotations
@model IEnumerable<Stream.Models.Game>

@{
    ViewData["Title"] = "Lista gier";
    var displayNames = typeof(Stream.Models.Game)
        .GetProperties()
        .Where(p => p.Name == "Title" || p.Name == "ReleaseDate" || p.Name == "Platform" || p.Name == "Genre")
        .ToDictionary(p => p.Name, p => p.GetCustomAttributes(typeof(DisplayAttribute), false)
            .Cast<DisplayAttribute>()
            .FirstOrDefault()?.Name ?? p.Name);

    var searchQuery = ViewData["SearchQuery"] as string ?? string.Empty;
}

<div class="container mt-4">
    <h2 class="mb-3">Lista gier</h2>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4>Gry</h4>
        <a class="btn btn-primary" asp-action="Create">
            <i class="bi bi-plus-circle"></i> Dodaj grę
        </a>
    </div>

    <!-- Search Form -->
    <div class="input-group mb-3">
        <input type="text" id="searchQuery" class="form-control" placeholder="Szukaj gier..." value="@searchQuery"/>
    </div>

    <!-- Games Table -->
    <table class="table table-striped" id="gamesTable">
        <thead class="table-light">
        <tr>
            <th>@displayNames["Title"]</th>
            <th>@displayNames["ReleaseDate"]</th>
            <th>@displayNames["Platform"]</th>
            <th>@displayNames["Genre"]</th>
            <th>Akcje</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var game in Model)
        {
            <tr>
                <td>@game.Title</td>
                <td>@game.ReleaseDate?.ToString("yyyy-MM-dd")</td>
                <td>@game.Platform</td>
                <td>@game.Genre</td>
                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@game.Id">Edytuj</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@game.Id">Usuń</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

