@using System.ComponentModel.DataAnnotations
@model IEnumerable<Stream.Models.Library>

@{
    ViewData["Title"] = "Lista bibliotek";
    var displayNames = typeof(Stream.Models.Library)
        .GetProperties()
        .Where(p => p.Name == "Id" || p.Name == "User" || p.Name == "Game" || p.Name == "Status")
        .ToDictionary(p => p.Name, p => p.GetCustomAttributes(typeof(DisplayAttribute), false)
            .Cast<DisplayAttribute>()
            .FirstOrDefault()?.Name ?? p.Name);

    var searchQuery = ViewData["SearchQuery"] as string ?? string.Empty;
}

<div class="container mt-4">
    <h2 class="mb-3">Lista bibliotek</h2>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4>Biblioteki</h4>
        <a class="btn btn-primary" asp-action="Create">
            <i class="bi bi-plus-circle"></i> Dodaj grę do biblioteki
        </a>
    </div>

    <!-- Search Form -->
    <div class="input-group mb-3">
        <input type="text" id="searchQuery" class="form-control" placeholder="Szukaj bibliotek..." value="@searchQuery"/>
    </div>

    <!-- Libraries Table -->
    <table class="table table-striped" id="librariesTable">
        <thead class="table-light">
        <tr>
            <th>@displayNames["Id"]</th>
            <th>@displayNames["User"]</th>
            <th>@displayNames["Game"]</th>
            <th>@displayNames["Status"]</th>
            <th>Akcje</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var library in Model)
        {
            <tr>
                <td>@library.Id</td>
                <td>@library.User?.Username</td>
                <td>@library.Game?.Title</td>
                <td>@library.Status</td>
                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@library.Id">Edytuj</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@library.Id">Usuń</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>