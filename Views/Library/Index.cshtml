@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<Stream.Models.Library>

@{
    ViewData["Title"] = "Lista bibliotek";
    var displayNames = typeof(Stream.Models.Library)
        .GetProperties()
        .Where(p => p.Name == "User" || p.Name == "Game" || p.Name == "Status")
        .ToDictionary(p => p.Name, p => p.GetCustomAttributes(typeof(DisplayAttribute), false)
            .Cast<DisplayAttribute>()
            .FirstOrDefault()?.Name ?? p.Name);

    var searchQuery = ViewData["SearchQuery"] as string ?? string.Empty;
}

<div class="container mt-4">
    <h2 class="mb-3">Lista bibliotek</h2>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4>Biblioteki</h4>
        <a class="btn btn-primary" asp-action="Create">
            <i class="bi bi-plus-circle"></i> Dodaj bibliotekę
        </a>
    </div>

    <!-- Search Form -->
    <div class="input-group mb-3">
        <input type="text" id="searchQuery" class="form-control" placeholder="Search by User, Game or Status" value="@searchQuery"/>
    </div>

    <!-- Libraries Table -->
    <table class="table table-striped" id="librariesTable">
        <thead class="table-light">
        <tr>
            <th>@displayNames["User"]</th>
            <th>@displayNames["Game"]</th>
            <th>@displayNames["Status"]</th>
            <th>Action</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var library in Model)
        {
            <tr>
                <td>@library.User?.Username</td>
                <td>@library.Game?.Title</td>
                <td>@library.Status</td>
                <td>
                    <a class="btn btn-primary" href="@Url.Action("Edit", "Library", new { id = library.Id })">Edit</a>
                    <a class="btn btn-danger" href="@Url.Action("Delete", "Library", new { id = library.Id })">Delete</a>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <!-- Pagination -->
    <div class="d-flex justify-content-between align-items-center mt-3">
        <div>
            <span>Strona @ViewData["CurrentPage"] z @Math.Ceiling((double)(ViewData["TotalLibraries"] as int? ?? 0) / (ViewData["PageSize"] as int? ?? 10))</span>
        </div>
        <nav>
            <ul class="pagination">
                <li class="page-item @(ViewData["CurrentPage"] as int? == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { searchQuery = ViewData["SearchQuery"], pageNumber = (ViewData["CurrentPage"] as int?) - 1, pageSize = ViewData["PageSize"] })">Poprzednia</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { searchQuery = ViewData["SearchQuery"], pageNumber = (ViewData["CurrentPage"] as int?) + 1, pageSize = ViewData["PageSize"] })">Następna</a>
                </li>
            </ul>
        </nav>
    </div>
</div>